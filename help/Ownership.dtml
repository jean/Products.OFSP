<dtml-var standard_html_header>

<h1>Ownership</h1>

<h2>Overview</h2>

<p> 
This view allows you to manage the ownership of a Zope object.
</p>

<p>
All Zope objects except objects within the Control Panel support 
ownership. When an object is created, copied or imported in Zope, 
the logged-in user performing the operation becomes the owner of 
the resulting object(s). Note that simply moving or renaming an 
object does not change its ownership.
</p>

<p>
Ownership is most important for Zope objects that "execute" 
content supplied through the web, such as DTML Methods, DTML 
Documents and SQL Methods. The abilities of these  executable 
objects are constrained by the abilities of the object's owner
as well as the user causing the object to execute from a Zope
security point of view. In other words, an executable cannot 
perform operations that its owner could not perform directly.
</p>

<p>
While most Zope objects support ownership, objects may not 
always have an owner assigned. Objects that do not have an 
assigned owner are <tt>unowned</tt>. An unowned executable 
object executes with the permissions of the user running the
object.
</p>

<p>
There are three possible states of ownership that a Zope object
may be in. The object may be <em>unowned</em>, it may be 
<em>owned directly</em> or it may be <em>owned implicitly</em>. 
If an object is owned directly, the ownership information is 
stored in the object itself. If an object is owned implicitly, 
it acquires its ownership information from its container (which 
may in turn acquire its ownership information from <em>its</em> 
container, and so on). 
</p>

<p>
When Zope automatically assigns ownership 
to newly created or copied objects, it tries to use implict 
ownership if possible. This makes it easier to change the 
ownership of many objects at one time without having to visit 
each object directly. For example, if everything in the folder 
<tt>research</tt> is owned by Fred and you want to change the 
ownership of everything in the folder to Jim, you only need to 
visit the <tt>research</tt> folder and change the ownership there 
if all of the objects under <tt>research</tt> are owned implicitly.
</p>

<h2>Managing ownership</h2>

<p>
Clicking on the <em>Ownership</em> tab of a Zope object will 
display the id and title of the object along with the current 
ownership status of the object.
</p>

<p>
If the object is not owned, you will see a message like:
</p>

<p>
<tt>Zope QuickStart Outline (QuickStart) is unowned. </tt>
</p>

<p>
If you have the <em>Take ownership</em> permission for the object, 
you will also see a button labeled <tt>Take ownership</tt>. Click 
the button to take ownership of the object.
</p>

<p>
If the object is owned directly, you will see a message like:
</p>

<p>
<tt>My Folder (my_folder) is owned directly by fred (acl_users).</tt>
</p>

<p>
You will also see a button labeled <tt>Make ownership implicit 
(acquired)</tt>. Click this button to remove the direct ownership 
information in the object and have the object acquire its ownership 
information from its container.
</p>
<p>
If you have the <em>Take ownership</em> permission for the object, 
you will also see a button labeled <tt>Take ownership</tt>. Click 
the button to take ownership of the object.
</p>

<p>
If the object is owned implicitly, you will see a message like:
</p>

<p>
<tt>My Folder (my_folder) is owned indirectly (through acquisition) 
by fred (acl_users).</tt>
</p>

<p>
You will also see a button labeled <tt>Make ownership explicit 
</tt>. Click this button to make the object store the ownership 
information that it is currently acquiring in itself directly. 
After making ownership explicit, changes to the ownership 
information in the current object's containers will no longer 
affect the ownership information of the current object.
</p>
<p>
If you have the <em>Take ownership</em> permission for the object, 
you will also see a button labeled <tt>Take ownership</tt>. Click 
the button to take ownership of the object.
</p>

<h2>Notes on Ownership</h2>

<p>
It is possible to remove a user in your Zope installation while 
objects that were owned by that user remain (for instance, 
someone in your organization moves on, so you remove his account 
on your Zope server). When you remove a Zope user, objects that 
were owned by that user still have ownership information that 
refers to that user. This will not cause an error, but it is 
important to understand what happens to Zope objects whose owners 
no longer exist.
</p>

<p>
This is most important for "executable" objects. Usually, the 
abilities of executable objects are constrained by the abilities 
of the object's owner as well as the user causing the object to 
execute. If Zope cannot find the user that the executable's ownership 
information refers to when it tries to execute the object, it will 
use the special <tt>nobody</tt> or anonymous user instead. The 
<tt>nobody</tt> user has very minimal priveleges, so you should take 
this into account when deciding what to do about a user's owned 
objects when you delete the user. If the user had DTML documents or 
other executable objects that depended upon their owner to have a 
higher level of privilege than the <tt>nobody</tt> user, they will 
not work correctly until their ownership has been reassigned to 
another user with sufficient privileges.
</p>

<dtml-var standard_html_footer>
